<!-- navbar -->
<header id="header">
  <nav class="container">
    <div class="nav-header d-flex">
      <a href="/">
        <img class="logo" src="/assets/images/logo.svg" alt="home" />
      </a>

      <section class="navbar-mobile-icon">
        <button
          class="menu-toggle"
          aria-expanded="false"
          aria-controls="navigation"
          ><span class="sr-only">Menu</span>
          <svg
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            width="32"
            height="32"
            ><g fill="none" fill-rule="evenodd"
              ><path
                fill="#FFF"
                stroke="#2C2830"
                stroke-width="1.5"
                d="M.75.75h30.5v30.5H.75z"></path><g fill="#2C2830"
                ><path d="M8 10h16v1.5H8zM8 15h16v1.5H8zM8 20h16v1.5H8z"
                ></path></g
              ></g
            ></svg
          >
        </button>
      </section>
    </div>
    <div class="nav_bar">
      <ul class="nav_bar_left" tabindex="-1">
        <li class="nav-parent">
          <button href="#" class="link-btn"
            >Product
            <span>
              <svg
                width="10"
                height="7"
                viewBox="0 0 10 7"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  opacity="0.75"
                  d="M1 1L5 5L9 1"
                  stroke="white"
                  stroke-width="2"></path>
              </svg>
            </span>
          </button>

          <ul class="nav-child">
            <li><a href="#">Overview</a></li>
            <li><a href="#">Pricing</a></li>
            <li><a href="#">Marketplace</a></li>
            <li><a href="#">Features</a></li>
            <li><a href="#">Integrations</a></li>
          </ul>
        </li>
        <li class="nav-parent">
          <button href="#" class="link-btn"
            >Company <span>
              <svg
                width="10"
                height="7"
                viewBox="0 0 10 7"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  opacity="0.75"
                  d="M1 1L5 5L9 1"
                  stroke="white"
                  stroke-width="2"></path>
              </svg>
            </span>
          </button>
          <ul class="nav-child">
            <li><a href="#">About</a></li>
            <li><a href="#">Team</a></li>
            <li><a href="#">Blog</a></li>
            <li><a href="#">Careers</a></li>
          </ul>
        </li>
        <li class="nav-parent">
          <button href="#" class="link-btn"
            >Connect <span>
              <svg
                width="10"
                height="7"
                viewBox="0 0 10 7"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  opacity="0.75"
                  d="M1 1L5 5L9 1"
                  stroke="white"
                  stroke-width="2"></path>
              </svg>
            </span>
          </button>
          <ul class="nav-child">
            <li><a href="#">Contact</a></li>
            <li><a href="#">Newsletter</a></li>
            <li><a href="#">LinkedIn</a></li>
          </ul>
        </li>
      </ul>
      <ul class="nav_bar_right" tabindex="-1">
        <li>
          <a href="#">Login</a>
        </li>
        <li>
          <a class="btn" href="#">Sign Up</a>
        </li>
      </ul>
    </div>
  </nav>
</header>

<script>
  const toggler = document.querySelector(".menu-toggle");
  const navBar = document.querySelector(".nav-bar");
  const header = document.querySelector("header");
  const hero = document.querySelector("#hero");
  const navParents = document.querySelectorAll(".nav-parent");
  const navChildren = document.querySelectorAll(".nav-child");
  const navButtons = document.querySelectorAll(".link-btn");

  navParents.forEach((navParent) => {
    navParent.addEventListener("click", (e) => {
      const navChild = e.target.parentNode.querySelector(".nav-child");
      const navButton = e.target;
      navButtons.forEach((item) => {
        if (item !== navButton) {
          item.classList.remove("show");
        }
      });
      // navChildren.forEach((singleNavChild) => {
      //   if (singleNavChild !== navChild) {
      //     singleNavChild.classList.remove("show");
      //   }
      // });
      // navChild.classList.toggle("show");
      navButton.classList.toggle("show");
    });
  });

  header.addEventListener("click", (e) => {
    if (!e.target.classList.contains("link-btn")) {
      navButtons.forEach((navButton) => {
        navButton.classList.remove("show");
      });
    }
  });
  hero.addEventListener("click", (e) => {
    if (!e.target.classList.contains("link-btn")) {
      navButtons.forEach((navButton) => {
        navButton.classList.remove("show");
      });
    }
  });

  toggler.addEventListener("click", () => {
    // Toggle class "opened". Set also aria-expanded to true or false.
    if (-1 !== toggler.className.indexOf("opened")) {
      toggler.className = toggler.className.replace(" opened", "");
      toggler.setAttribute("aria-expanded", "false");

      navBar.className = navBar.className.replace(" opened", "");
      header.className = header.className.replace(" opened", "");
    } else {
      toggler.className += " opened";
      navBar.className += " opened";
      toggler.setAttribute("aria-expanded", "true");
    }
  });
  // Check if responsive menu is open when resized and then remove
  window.addEventListener("resize", () => {
    if (
      navBar.classList.contains("opened") &&
      window.matchMedia("(min-width: 768px)").matches
    ) {
      toggler.className = toggler.className.replace(" opened", "");
      toggler.setAttribute("aria-expanded", "false");
      navBar.className = navBar.className.replace(" opened", "");
    }
  });
</script>

<style>
  @import url("../styles/_media.css");
  nav {
    @media (--md) {
      display: flex;
      align-items: center;
      padding-top: 4rem;
    }
  }
  ul {
    padding: 0;
    margin: 0;
  }
  ul li {
    position: relative;
  }
  ul ul {
    @media (--md) {
      display: none;
      position: absolute;
      animation: fadeIn 0.35s both ease-in;
      top: 32px;
      padding: 1.5rem;
      left: -30%;
      border-radius: 8px;
      background-color: var(--white);
      box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1),
        0 2px 4px -2px rgb(0 0 0 / 0.1);
    }
  }
  ul ul li {
    padding-top: 0.5rem;
  }
  button.show + ul {
    display: block;
  }
  /* ul ul.show {
    display: block;
  } */
  button {
    border: none;
    background-color: transparent;
    color: var(--white);
    cursor: pointer;
  }
  .nav-child a {
    color: var(--very-dark-grayish-blue);
    cursor: pointer;
    transition: all 0.35s ease-in;
    text-decoration: none;
    &:hover,
    &:focus {
      color: var(--very-dark-black-blue);
      font-weight: bold;
    }
  }
  a {
    text-decoration: none;
    color: var(--white);
    transition: all 0.35s ease-in;
    &:hover,
    &:focus {
      text-decoration: underline;
    }
  }
  .nav-header {
  }
  .nav_bar {
    @media (--md) {
      flex: 1;

      display: flex;
      justify-content: space-between;
      align-items: center;
    }
  }
  .nav_bar_left,
  .nav_bar_right {
    @media (--md) {
      display: flex;
      gap: 2rem;
      align-items: center;
    }
  }
  .nav_bar_left {
    @media (--md) {
      padding-left: 4rem;
    }
  }
  .navbar-mobile-icon {
    @media (--md) {
      display: none;
    }
  }
  .btn {
    padding: 10px 40px;
    background-color: var(--white);
    border-radius: 90px;
    display: inline-block;
    color: #ce414a;
  }
  @keyframes fadeIn {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }
</style>
